# recommendation_service/docker-compose.yml

services:

  fastapi:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: recommendation_service
    restart: always
    depends_on:
      - postgres
      - redis
      - kafka
      - minio
    environment:
      PYTHONPATH: /app
      DATABASE_URL: postgresql+asyncpg://admin:password@postgres:5432/recommendations
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: recommendations
      REDIS_URL: redis://redis:6379/0
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: miniopassword
      MINIO_BUCKET: models
      OPENBLAS_NUM_THREADS: 1
    ports:
      - "8000:8000"
    command: >
      sh -c "uvicorn main:app --host 0.0.0.0 --port 8000 --reload"

  worker:
    build: ./ml
    command: python worker.py
    depends_on:
      - redis
      - kafka
      - minio
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=recommendations
      - REDIS_URL=redis://redis:6379/0
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=miniopassword
      - MINIO_BUCKET=models
      - OPENBLAS_NUM_THREADS=1

  rq_worker:
    build: ./ml
    command: rq worker --url redis://redis:6379/0
    depends_on:
      - redis
      - minio
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=recommendations
      - REDIS_URL=redis://redis:6379/0
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=miniopassword
      - MINIO_BUCKET=models
      - OPENBLAS_NUM_THREADS=1

  rq_scheduler:
    build: ./ml
    command: python scheduler.py
    depends_on:
      - redis
      - minio
    environment:
      - REDIS_URL=redis://redis:6379/0
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=miniopassword
      - MINIO_BUCKET=models
      - OPENBLAS_NUM_THREADS=1

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: recommendations
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # zookeeper:
  #   image: confluentinc/cp-zookeeper:latest
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   ports:
  #     - "2181:2181"

  # kafka:
  #   image: confluentinc/cp-kafka:latest
  #   environment:
  #     - KAFKA_BROKER_ID=1
  #     - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
  #     - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
  #     - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
  #     - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
  #   ports:
  #     - "9092:9092"
  #   depends_on:
  #     - zookeeper
  #   volumes:
  #   - kafka_data:/var/lib/kafka/data

  minio:
    image: minio/minio
    container_name: minio
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=miniopassword
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

volumes:
  postgres_data:
  redis_data:
  minio_data:
  kafka_data:
