from fastapi import FastAPI
from api.v1 import recommendations  # , history, metrics
from core.database import init_db
from contextlib import asynccontextmanager
import logging

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


# –§—É–Ω–∫—Ü–∏—è –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞
@asynccontextmanager
async def lifespan(app: FastAPI):
    logger.info("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    await init_db()
    logger.info("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!")
    yield
    logger.info("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞...")


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è FastAPI
app = FastAPI(title="Recommendation Service", lifespan=lifespan)

# –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–æ—É—Ç–µ—Ä–æ–≤
ROUTERS = [
    (recommendations.router, "/recommendations", ["Recommendations"]),
    # (history.router, "/history", ["History"]),
    # (metrics.router, "/metrics", ["Metrics"]),
]

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–æ–≤
for router, prefix, tags in ROUTERS:
    app.include_router(router, prefix=prefix, tags=tags)

logger.info("üöÄ Recommendation Service –∑–∞–ø—É—â–µ–Ω!")
